[metadata]
argument-hint = "{{plan_id}}"
description = "Execute the task in the plan"

[prompt]
content = """# Task Execution\n\nYou are the orchestrator responsible for executing all tasks defined in the execution blueprint of a plan document, so choose an appropriate sub-agent for this role. Your role is to coordinate phase-by-phase execution, manage parallel task processing, and ensure validation gates pass before phase transitions.\n\n## Critical Rules\n\n1. **Never skip validation gates** - Phase progression requires successful validation\n2. **Maintain task isolation** - Parallel tasks must not interfere with each other\n3. **Preserve dependency order** - Never execute a task before its dependencies\n4. **Document everything** - All decisions, issues, and outcomes must be recorded in the \"Execution Summary\", under \"Noteworthy Events\"\n5. **Fail safely** - Better to halt and request help than corrupt the execution state\n\n## Input Requirements\n- A plan document with an execution blueprint section. See /TASK_MANAGER.md fo find the plan with ID {{plan_id}}\n- Task files with frontmatter metadata (id, group, dependencies, status)\n- Validation gates document: `/config/hooks/POST_PHASE.md`\n\n### Input Error Handling\nIf the plan does not exist, or the plan does not have an execution blueprint section. Stop immediately and show an error to the user.\n\n## Execution Process\n\nUse your internal Todo task tool to track the execution of all phases, and the final update of the plan with the summary. Example:\n\n- [ ] Create feature branch from the main branch.\n- [ ] Execute .ai/task-manager/config/hooks/PRE_PHASE.md hook before Phase 1.\n- [ ] Phase 1: Execute 1 task(s) in parallel.\n- [ ] Execute .ai/task-manager/config/hooks/POST_PHASE.md hook after Phase 1.\n- [ ] Execute .ai/task-manager/config/hooks/PRE_PHASE.md hook before Phase 2.\n- [ ] Phase 2: Execute 3 task(s) in parallel.\n- [ ] Execute .ai/task-manager/config/hooks/POST_PHASE.md hook after Phase 2.\n- [ ] Execute .ai/task-manager/config/hooks/PRE_PHASE.md hook before Phase 3.\n- [ ] Phase 3: Execute 1 task(s) in parallel.\n- [ ] Execute .ai/task-manager/config/hooks/POST_PHASE.md hook after Phase 3.\n- [ ] Update the Plan 7 with execution summary, and the archive it.\n\n### Phase Pre-Execution\n\nRead and execute .ai/task-manager/config/hooks/PRE_PHASE.md\n\n### Phase Execution Workflow\n\n1. **Phase Initialization**\n    - Identify current phase from the execution blueprint\n    - List all tasks scheduled for parallel execution in this phase\n\n2. **Agent Selection and Task Assignment**\nRead and execute .ai/task-manager/config/hooks/PRE_TASK_ASSIGNMENT.md\n\n3. **Parallel Execution**\n    - Deploy all selected agents simultaneously using your internal Task tool\n    - Monitor execution progress for each task\n    - Capture outputs and artifacts from each agent\n    - Update task status in real-time\n\n4. **Phase Completion Verification**\n    - Ensure all tasks in the phase have status: \"completed\"\n    - Collect and review all task outputs\n    - Document any issues or exceptions encountered\n\n### Phase Post-Execution\n\nRead and execute .ai/task-manager/config/hooks/POST_PHASE.md\n\n\n### Phase Transition\n\n  - Update phase status to \"completed\" in the Blueprint section of the plan {{plan_id}} document.\n  - Initialize next phase\n  - Repeat process until all phases are complete\n\n### Error Handling\n\n#### Validation Gate Failures\nRead and execute .ai/task-manager/config/hooks/POST_ERROR_DETECTION.md\n\n### Output Requirements\n\n## Optimization Guidelines\n\n- **Maximize parallelism**: Always run all available tasks in a phase simultaneously\n- **Resource awareness**: Balance agent allocation with system capabilities\n- **Early failure detection**: Monitor tasks actively to catch issues quickly\n- **Continuous improvement**: Note patterns for future blueprint optimization\n\n## Post-Execution Processing\n\nUpon successful completion of all phases and validation gates, perform the following additional steps:\n\n- [ ] Execution Summary Generation\n- [ ] Plan Archival\n\n### 1. Execution Summary Generation\n\nAppend an execution summary section to the plan document with the format described in .ai/task-manager/config/templates/[EXECUTION_SUMMARY_TEMPLATE.md\n\n### 2. Plan Archival\n\nAfter successfully appending the execution summary:\n\n**Move completed plan to archive**:\n```bash\nmv .ai/task-manager/plans/[plan-folder] .ai/task-manager/archive/\n```\n\n### Important Notes\n\n- **Only archive on complete success**: Archive operations should only occur when ALL phases are completed and ALL validation gates have passed\n- **Failed executions remain active**: Plans that fail execution or validation should remain in the `plans/` directory for debugging and potential re-execution\n- **Error handling**: If archival fails, log the error but do not fail the overall execution - the implementation work is complete\n- **Preserve structure**: The entire plan folder (including all tasks and subdirectories) should be moved as-is to maintain referential integrity\n"""
